swagger: '2.0'
info:
  version: 1.0.0
  title: Product Offerings
  description: >
        Amaysim has a number of different plans that they offer to customers.
        These are currently curated and managed across multiple different systems
        and data sources. We have identified that this is a prime candidate to be
        extracted into a centralised product catalogue micro-service. This
        service will expose product (plan) data out to multiple clients, internal
        and external. It should be accessed via an API over HTTP.

  termsOfService: http://api.amaysim.com.au/terms/
  contact:
    name: apiteam@amaysim.com.au
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: api.amaysim.com.au
basePath: /api
schemes:
  - http
paths:
  /products/:
    get:
      description: The complete Amaysim product catalog. This is a full non-paginated array. Order is non-deterministic
      produces:
        - application/json
      parameters:
        - in: header
          name: accept-version
          description: "Support for [semver](http://semver.org/) versioning in an `Accept-Version` header. The Api will choose the highest matching value if none is supplied."
          required: false
          type: string
      responses:
        '200':
          description: |
            A successful response composed of an an array of one or more Products.
          schema:
            title: ArrayOfProducts
            type: array
            items:
              $ref: "#/definitions/ProductV1"
        default:
          description: Anything other than http status code of 200 is considered an unsuccessful response, or error.
          schema:
            $ref: "#/definitions/Error"
  /products/{id}:
    get:
      description: >
        Amaysim product catalogue by code.
      produces:
        - application/json
      parameters:
        - in: header
          name: accept-version
          description: "Support for [semver](http://semver.org/) versioning in an `Accept-Version` header. The Api will choose the highest matching value if none is supplied."
          required: false
          type: string
        - name: id
          in: path
          description: |
            Extract a specific product offering by it's unique id.
          required: true
          type: string
          collectionFormat: csv
          enum:
            - ult_small
            - ult_medium
            - ult_large
            - ult_xlarge
      responses:
        '200':
          description: A successful response composed of an an array of one or more Products.
          schema:
            $ref: "#/definitions/ProductV1"
        default:
          description: Anything other than http status code of 200 is considered an unsuccessful response, or error.
          schema:
            $ref: "#/definitions/Error"
definitions:
  ProductV1:
    description: |
      A full representation of a product as of version 1.0.0
    type: object
    properties:
      code:
        type: string
        description: The unique product code of this product offering.
      name:
        type: string
        description: The human readable, English name of this product offering.
      description:
        type: string
        description: The human readable, English description of this product offering.
      price:
        type: number
        format: float
        description: The current price in AUD of this product offering.
      expiry:
        type: integer
        format: int32
        description: The current expiry term of this product offering in days after activation.
      size_mb:
        type: integer
        format: int32
        description: Maximum size in megabytes that the current plan offers.
      is:
        title: ArrayOfIsA
        description: A set of is-a key and values.
        type: array
        items:
          $ref: "#/definitions/IsA"
      links:
        title: ArrayOfLinks
        description: A set of links to other resources that can augment or server to discover relationships to this product offering.
        type: array
        items:
          $ref: "#/definitions/Link"
  Error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
  IsA:
    type: object
    description: |
      This is a key value pair used to answer a variety of questions about the features of a product. For example is-aut-renew would be { key:'auto_renew', value: true }
      * `plan` - Is the product offering a plan.
      * `unlimited` - Is the product offering unlimited.
      * `4g` - Is 4-g network supported by this plan.
      * `auto_renew` - Does the product offering automatically renew.
    properties:
      key:
        type: string
        enum:
          - plan
          - unlimited
          - 4g
          - auto_renew
      value:
        type: boolean
  Link:
    type: object
    properties:
      rel:
        type: string
        enum:
          - self
          - t_and_c
      href:
        type: string
